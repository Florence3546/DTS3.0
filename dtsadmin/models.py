# coding:UTF-8from __future__ import unicode_literals# Create your models here.from django.db import modelsfrom common.constant import (    INFO_TYPE_INFO,    INFO_TYPE_CHOICES,    INFO_STATUS_PENDING,    INFO_STATUS_CHOICES,    INFO_AUDIENCE_CHOICES,    FEEDBACK_TYPE_CHOICES,    TRADE_TYPE_CHOICES,    PAY_TYPE_CHOICES)from dtsauth.models import Userfrom ckeditor_uploader.fields import RichTextUploadingFieldimport datetime# Create your models here.class Informations(models.Model):    """信息发布，公告资讯管理"""    info_type = models.CharField('信息类型', max_length=20, default=INFO_TYPE_INFO, choices=INFO_TYPE_CHOICES)    name = models.CharField('信息名称', max_length=80)    # content = models.TextField('信息内容', blank=True)    content = RichTextUploadingField('信息内容', blank=True)    order_no = models.IntegerField('显示排序', blank=True, null=True)    info_status = models.IntegerField('信息状态', default=INFO_STATUS_PENDING, choices=INFO_STATUS_CHOICES)    start_date = models.DateField('开始时间')    end_date = models.DateField('结束时间')    update_user = models.ForeignKey(User, verbose_name='修改人', related_name="update_user", blank=True, null=True)    update_date = models.DateTimeField('修改时间', auto_now=True)    reviewer = models.ForeignKey(User, verbose_name='审核人', related_name="reviewer", blank=True, null=True)    review_date = models.DateTimeField('审核时间', auto_now=True)    is_top = models.BooleanField('是否置顶', default=False)    # visible_obj = models.CharField('可见对象', max_length=20, default='', choices=INFO_OBJ_CHOICES)    audience = models.CharField('受众', max_length=20, default='', choices=INFO_AUDIENCE_CHOICES)    def __unicode__(self):        return self.nameclass ConsultFeedback(models.Model):    """咨询反馈表"""    user = models.ForeignKey(User, verbose_name='提交人', on_delete=models.CASCADE)    content = models.TextField('内容',blank=True)    feedback_type = models.IntegerField('反馈类型', choices=FEEDBACK_TYPE_CHOICES)    # parent = models.ForeignKey('self', verbose_name='关联信息', blank=True, null=True, related_name='reply_set')    created = models.DateTimeField('创建时间', auto_now=True)    is_display = models.BooleanField('是否显示', default=True, blank=True)    is_replied = models.BooleanField('是否已回复', default=False)    updated = models.DateTimeField('提交时间', auto_now=True)    replied_content = models.TextField('回复内容',blank=True)    def __unicode__(self):        return self.content